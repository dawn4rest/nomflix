{"version":3,"sources":["assets/noPosterSmall.png","Components/Poster.js","Components/Section.js","Components/Loader.js","Components/Message.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Image","props","bgUrl","Rating","span","Title","Year","ImageContainer","Poster","id","imageUrl","title","rating","year","isMovie","to","require","role","aria-label","length","substring","Grid","Section","children","Text","color","Message","text","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","key","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","original_name","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","pathname","location","includes","match","push","history","parseId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6490e022.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 4px;\n  height: 180px;\n  transition: opacity 0.1s ease-in-out;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s ease-in-out;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <Helmet>\n      <title> Loading | Nomflix</title>\n    </Helmet>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Helmet>\n      <title> Error | Nomflix</title>\n    </Helmet>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Poster from \"Components/Poster\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing Movies\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"c42782686118e4f08427cf8b61601207\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Poster from \"Components/Poster\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated TV Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today TV Shows\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular TV Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  airingToday: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    airingToday: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n\n      this.setState({\n        topRated,\n        airingToday,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV shows.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, airingToday, popular, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        airingToday={airingToday}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Poster from \"Components/Poster\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        <Helmet>\n          <title>{searchTerm ? searchTerm : \"Search\"} | Nomflix</title>\n        </Helmet>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {movieResults &&\n          movieResults.length === 0 &&\n          tvResults &&\n          tvResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { searchTerm } = this.state;\n\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n\n    this.setState({\n      loading: true\n    });\n\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: calc(100vh - 50px);\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(5px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : error ? (\n    <Message color=\"#e74c3c\" text={error} />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.title ? result.title : result.name} | Nomflix</title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>{result.title ? result.title : result.name}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date ? result.release_date.substring(0, 4) : \"\"}\n              {result.first_air_date\n                ? result.first_air_date.substring(0, 4)\n                : \"\"}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : \"\"}\n              {result.episode_run_time ? result.episode_run_time : \"\"} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n\n    const parseId = parseInt(id);\n\n    if (isNaN(parseId)) {\n      return push(\"/\");\n    }\n\n    const { isMovie } = this.state;\n\n    let result = null;\n\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parseId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parseId));\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find anything.\"\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result\n      });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: #ffffff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 4px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: all 0.5s ease;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\n\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route\n          path=\"https://dawn4rest.github.io/nomflix\"\n          exact\n          component={Home}\n        />\n        <Route path=\"https://dawn4rest.github.io/nomflix/tv\" component={TV} />\n        <Route\n          path=\"https://dawn4rest.github.io/nomflix/search\"\n          component={Search}\n        />\n        <Route\n          path=\"https://dawn4rest.github.io/nomflix/movie/:id\"\n          component={Detail}\n        />\n        <Route\n          path=\"https://dawn4rest.github.io/nomflix/show/:id\"\n          component={Detail}\n        />\n        <Redirect from=\"*\" to=\"https://dawn4rest.github.io/nomflix/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color:rgba(20, 20, 20, 1);\n    color: #ffffff;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}